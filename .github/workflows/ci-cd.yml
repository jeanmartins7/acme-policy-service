name: CI/CD Pipeline - Policy Service

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 17 and Maven
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Cache Maven Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Start Docker Compose Infrastructure for Integration Tests
        run: |
          sudo apt-get update && sudo apt-get install -y docker-compose
          docker compose -f src/main/resources/docker/docker-compose.yml up -d dynamodb-local

      - name: Wait for Infrastructure to be ready
        run: |
          echo "Waiting for DynamoDB Local (port 8000)..."
          timeout 60 bash -c 'until curl -s http://localhost:8000; do echo -n "."; sleep 5; done' || { echo "DynamoDB Local did not start in time."; exit 1; }
          echo "All infrastructure services are ready!"

      - name: Create DynamoDB Local Table
        run: |
               aws dynamodb create-table \
                --table-name PolicyRequests \
                --attribute-definitions \
                    AttributeName=id,AttributeType=S \
                    AttributeName=customerId,AttributeType=S \
                --key-schema \
                    AttributeName=id,KeyType=HASH \
                --provisioned-throughput \
                    ReadCapacityUnits=1,WriteCapacityUnits=1 \
                --global-secondary-indexes \
                    'IndexName=customer_id-index,KeySchema=[{AttributeName=customerId,KeyType=HASH}],Projection={ProjectionType=ALL},ProvisionedThroughput={ReadCapacityUnits=1,WriteCapacityUnits=1}' \
                --endpoint-url http://localhost:8000
          # Adicionar --no-cli-pager se estiver no GitHub Actions e não quiser paginação
          # curl para verificar a URL da tabela antes de prosseguir
          # Adicionar wait para a tabela ficar ativa
               echo "Waiting for PolicyRequests table to be active..."
               aws dynamodb wait table-exists --table-name PolicyRequests --endpoint-url http://localhost:8000

      - name: Build and Test with Maven
        run: mvn clean install -Dskip.native.build=true

      - name: Upload JaCoCo Code Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: target/site/jacoco/jacoco.xml

      - name: Stop Docker Compose Infrastructure
        if: always()
        run: docker compose -f src/main/resources/docker/docker-compose.yml down

  build-docker-image:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build Native Image with Paketo Buildpacks
        run: |
          mvn spring-boot:build-image -Pnative -Dspring-boot.build-image.dockerfile=src/main/resources/docker/Dockerfile -Dspring-boot.build-image.build-context=.
          echo "Native Image built successfully using Paketo Buildpacks."